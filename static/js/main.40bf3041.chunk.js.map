{"version":3,"sources":["themes/default/index.js","util/screen/modules/breakpoints.js","scenes/Main/Main.jsx","scenes/AboutMe/AboutMe.jsx","scenes/RedditPreview/RedditPreview.jsx","components/RouterSlider/RouterSlider.jsx","components/GlobalStyle/index.jsx","App.js","index.js"],"names":["theme","bodyText","link","nameText","nameTextShadow","burgerMenuColor","burgerMenuLinkColor","aboutMeText","aboutMeTextShadow","navLinkText","brandColorPrimary","borderRadius","SCREEN_MAX","xs","SM_MIN","sm","MD_MIN","md","LG_MIN","lg","XL_MIN","Main","MainWrapper","InnerWrapper","Name","styled","div","h1","props","AboutMe","Text","imagesCache","RedditPreview","React","useState","images","setImages","useEffect","axios","get","then","response","rawData","imageData","forEach","kind","data","toRemoveFrom","push","author","id","title","replace","url","ups","href","permalink","getImages","children","catch","console","error","Container","EarthHeader","InnerContainer","map","image","LinkTo","target","Card","key","ImageWrapper","Image","src","Info","Title","Author","a","img","h2","h3","NavigationSlider","withNavigationHandlers","AwesomeSlider","RouterSlider","withNavigationContext","fullpage","animation","navigation","className","media","slug","GlobalStyle","createGlobalStyle","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.40bf3041.chunk.js","sourcesContent":["const colors = {\r\n  bodyText: \"#52504f\",\r\n  link: \"#42b0ef\",\r\n  nameText: \"#f7f7f7\",\r\n  nameTextShadow: \"2px 2px #66453e\",\r\n  burgerMenuColor: \"#f7f7f7\",\r\n  burgerMenuLinkColor: \"#fdfdfd\",\r\n  aboutMeText: \"#f7f7f7\",\r\n  aboutMeTextShadow: \"2px 2px #59668a\",\r\n  navLinkText: \"#fff\",\r\n  brandColorPrimary: \"#374f84\",\r\n};\r\n\r\nconst styles = {\r\n  borderRadius: \"3px\"\r\n};\r\n\r\nconst theme = {\r\n  ...colors,\r\n  ...styles\r\n};\r\n\r\nexport { theme };\r\n","const XS_MIN = 480;\r\nconst SM_MIN = 768;\r\nconst MD_MIN = 992;\r\nconst LG_MIN = 1200;\r\nconst XL_MIN = 1600;\r\n\r\nconst SCREEN_MIN = {\r\n    xs: `${XS_MIN}px`,\r\n    sm: `${SM_MIN}px`,\r\n    md: `${MD_MIN}px`,\r\n    lg: `${LG_MIN}px`,\r\n    xl: `${XL_MIN}px`,\r\n};\r\n\r\nconst SCREEN_MAX = {\r\n    xs: `${SM_MIN - 1}px`,\r\n    sm: `${MD_MIN - 1}px`,\r\n    md: `${LG_MIN - 1}px`,\r\n    lg: `${XL_MIN - 1}px`,\r\n};\r\n\r\nexport {\r\n    SCREEN_MIN,\r\n    SCREEN_MAX,\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { SCREEN_MAX } from './../../util/screen';\r\n\r\nfunction Main() {\r\n\treturn (\r\n\t\t<MainWrapper>\r\n\t\t\t<InnerWrapper>\r\n\t\t\t\t<Name>{'Ulises'}</Name>\r\n\t\t\t</InnerWrapper>\r\n\t\t</MainWrapper>\r\n\t);\r\n}\r\n\r\nexport { Main };\r\n\r\nconst MainWrapper = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tflex: 1 1 100%;\r\n\tbackground-color: #374f84;\r\n`;\r\n\r\nconst Name = styled.h1`\r\n\tfont-family: Pacifico, cursive;\r\n\tfont-size: 11rem;\r\n\tpadding: 1rem 4rem;\r\n\tfont-style: italic;\r\n\tcolor: ${props => props.theme.nameText};\r\n\ttext-shadow: ${props => props.theme.nameTextShadow};\r\n\r\n\t@media only screen and (max-width: ${SCREEN_MAX.xs}) {\r\n\t\tfont-size: 6rem;\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SCREEN_MAX } from \"./../../util/screen\";\r\n\r\nfunction AboutMe() {\r\n  return (\r\n    <MainWrapper>\r\n      <InnerWrapper>\r\n        <Text>{\"Hi, my name is Ulises. I do web things.\"}</Text>\r\n      </InnerWrapper>\r\n    </MainWrapper>\r\n  );\r\n}\r\n\r\nexport { AboutMe };\r\n\r\nconst MainWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1 1 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #374f84;\r\n`;\r\n\r\nconst Text = styled.h1`\r\n  display: flex;\r\n  font-size: 5rem;\r\n  padding: 1rem 4rem;\r\n  color: ${props => props.theme.aboutMeText};\r\n  text-shadow: ${props => props.theme.aboutMeTextShadow};\r\n\r\n  @media only screen and (max-width: ${SCREEN_MAX.xs}) {\r\n    font-size: 3rem;\r\n    padding: 1rem 1.75rem;\r\n  }\r\n`;","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { SCREEN_MAX } from './../../util/screen';\r\n\r\nlet imagesCache = null;\r\n\r\nfunction RedditPreview() {\r\n    const [images, setImages] = React.useState([]);\r\n\r\n    function removeSubstring(toRemoveFrom) {\r\n        return toRemoveFrom.replace(/\\[.*\\]/, '');\r\n    }\r\n\r\n    function getImages(rawData = []) {\r\n        if (!!imagesCache) return imagesCache;\r\n\r\n        const imageData = [];\r\n        rawData.forEach(({ kind, data }) => {\r\n            imageData.push({\r\n                author: data.author,\r\n                id: data.id,\r\n                title: removeSubstring(data.title),\r\n                url: data.url,\r\n                ups: data.ups,\r\n                href: `https://reddit.com${data.permalink}`\r\n            });\r\n        });\r\n\r\n        return imageData;\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        axios.get('https://www.reddit.com/r/EarthPorn/top/.json?limit=10')\r\n          .then(response => {\r\n              imagesCache = getImages(response.data.data.children);\r\n              setImages(imagesCache);\r\n          })\r\n          .catch(console.error);\r\n    });\r\n\r\n    function renderImages() {\r\n        return images.map(image => {\r\n            return (\r\n                <LinkTo href={image.href} target={\"_blank\"}>\r\n                    <Card key={image.id}>\r\n                        <ImageWrapper><Image src={image.url} /></ImageWrapper>\r\n                        <Info>\r\n                            <Title>{image.title || 'Generic earth title'}</Title>\r\n                            <Author>{image.author}</Author>\r\n                        </Info>\r\n                    </Card>\r\n                </LinkTo>\r\n            );\r\n\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <EarthHeader>\r\n                {'Pictures of Earth ðŸŒŽ'}\r\n            </EarthHeader>\r\n            <InnerContainer>\r\n                {renderImages()}\r\n            </InnerContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    background: #3f4d73;\r\n    flex-direction: column;\r\n    width: 100%;\r\n`;\r\n\r\nconst EarthHeader = styled.h1`\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: #6a98bf;\r\n    color: #fff;\r\n    font-size: 5rem;\r\n    font-weight: bold;\r\n    height: 100px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    font-style: italic;\r\n    color: #f7f7f7;\r\n    text-shadow: 2px 2px #66453e;\r\n\r\n\r\n    @media only screen and (max-width: ${SCREEN_MAX.xs}) {\r\n        font-size: 3rem;\r\n        height: 50px;\r\n    }\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1 1 100%;\r\n    align-items: center;\r\n`;\r\n\r\nconst LinkTo = styled.a`\r\n    cursor: pointer;\r\n    color: #52504f;\r\n`\r\n\r\nconst Card = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 2fr;\r\n    column-gap: 1rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n    max-width: 650px;\r\n    width: 650px;\r\n    margin: 0 0 1rem;\r\n    padding: 1rem;\r\n    border-radius: 3px;\r\n    background: #f7eeee;\r\n    box-shadow: 1px 2px 8px 0px #d8d8d8eb;\r\n\r\n    @media only screen and (max-width: ${SCREEN_MAX.xs}) {\r\n        max-width: 98%;\r\n        width: 98%;\r\n    }\r\n`;\r\n\r\nconst Image = styled.img`\r\n    max-width: 200px;\r\n    max-height: 200px;\r\n\r\n    @media only screen and (max-width: ${SCREEN_MAX.xs}) {\r\n        max-width: 80px;\r\n        max-height: 80px;\r\n    }\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst Info = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n    font-size: 1.55rem;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst Author = styled.h3`\r\n    font-size: 1.15rem;\r\n`;\r\n\r\nexport { RedditPreview };","import React from \"react\";\r\nimport AwesomeSlider from \"react-awesome-slider\";\r\nimport \"react-awesome-slider/dist/styles.css\";\r\nimport { withNavigationHandlers, withNavigationContext } from \"react-awesome-slider/dist/navigation\";\r\n\r\nimport { Main } from \"./../../scenes/Main\";\r\nimport { AboutMe } from \"./../../scenes/AboutMe\";\r\nimport { RedditPreview } from \"./../../scenes/RedditPreview\";\r\n\r\nconst NavigationSlider = withNavigationHandlers(AwesomeSlider);\r\n\r\nconst RouterSlider = withNavigationContext(({ fullpage }) => {\r\n  const animation = fullpage.navigation.animation || `foldOutAnimation`;\r\n\r\n  return (\r\n    <NavigationSlider\r\n      animation={animation}\r\n      className=\"c-awesome-slider\"\r\n      media={[\r\n          {\r\n            slug: \"page-one\",\r\n            className: \"c-slider-slug\",\r\n            children: (<><Main/><AboutMe/></>)\r\n          },\r\n          {\r\n            slug: \"page-two\",\r\n            className: \"c-slider-slug\",\r\n            children: <RedditPreview />\r\n          },\r\n      ]}\r\n    />\r\n  );\r\n});\r\n\r\nexport { RouterSlider };","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n    *,\r\n    *:before,\r\n    *:after {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html {\r\n        font-size: 62.5%;\r\n    }\r\n\r\n    body {\r\n        color: ${props => props.theme.bodyText};\r\n        font-family: Helvetica Neue, Arial, sans-serif;\r\n        font-size: 16px;\r\n        font-size: 1.6rem;\r\n        line-height: 1.25;\r\n        word-break: break-word;\r\n        word-wrap: break-word;\r\n        overflow-wrap: break-word;\r\n    }\r\n\r\n    a {\r\n        color: ${props => props.theme.link};\r\n        text-decoration: none;\r\n    };\r\n`;\r\n\r\nexport { GlobalStyle };\r\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport \"react-awesome-slider/dist/styles.css\";\nimport { Provider } from \"react-awesome-slider/dist/navigation\";\n\nimport { theme } from \"./themes/default\";\nimport { RouterSlider } from './components/RouterSlider';\nimport { GlobalStyle } from \"./components/GlobalStyle\";\n\nfunction App() {\n  const slug = \"page-one\";\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider slug={slug}>\n        <RouterSlider />\n        <GlobalStyle />\n      </Provider>\n    </ThemeProvider>\n  );\n}\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\trootElement\n);\n"],"sourceRoot":""}